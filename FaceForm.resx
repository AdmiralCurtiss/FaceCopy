<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>